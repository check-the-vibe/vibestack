events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Dynamic upstream for Codex callback; generated at startup by entrypoint.sh
    include /etc/nginx/conf.d/codex_callback_upstream.conf;

    server {
        listen 80;
        server_name localhost;

        # Ensure clean subpaths: redirect /ui -> /ui/ and /terminal -> /terminal/
        location = /ui {
            return 301 /ui/$is_args$args;
        }
        location = /terminal {
            return 301 /terminal/$is_args$args;
        }

        # Simple healthcheck endpoint (fast 200 OK)
        location = /healthz {
            add_header Content-Type text/plain;
            return 200 'ok\n';
        }

        # Streamlit app - proxy to port 8501 (preserve URI)
        location /ui/ {
            proxy_pass http://localhost:8501;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Terminal (ttyd + tmux) - proxy to port 7681 (strip prefix)
        # Use trailing slash to rewrite '/terminal/' to '/'
        location /terminal/ {
            proxy_pass http://localhost:7681/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 86400;
            proxy_send_timeout 86400;
            proxy_buffering off;
        }

        # Codex login callback proxy (path-based)
        # This forwards browser hits at /codex-callback/ to the Codex callback
        # server listening on 127.0.0.1:$CODEX_CALLBACK_PORT inside the container.
        location /codex-callback/ {
            proxy_pass http://codex_callback/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Default route to terminal for convenience (preserve URI)
        location / {
            proxy_pass http://localhost:7681;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 86400;
            proxy_send_timeout 86400;
            proxy_buffering off;
        }
    }

    # Dedicated proxy listener to bridge host <-> container for Codex callback
    # We listen on 1456 in the container, and forward to 127.0.0.1:$CODEX_CALLBACK_PORT
    # (Codex typically binds to 127.0.0.1). The Docker run maps host:$CODEX_CALLBACK_PORT
    # to container:1456 so that http://localhost:$CODEX_CALLBACK_PORT works on the host.
    server {
        listen 1456;
        server_name localhost;
        location / {
            proxy_pass http://codex_callback;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
